"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var UserService = (function () {
    function UserService() {
        this.User = [
            {
                id: 1, name: "on.lk", user: [
                    {
                        company_id: 1, name: "fluke", employee: [
                            { emp_id: 1, name: "fluke", password: "1234" },
                            { emp_id: 2, name: "bb", password: "1234" },
                            { emp_id: 3, name: "fern", password: "1234" },
                            { emp_id: 4, name: "zee", password: "1234" },
                        ]
                    },
                    {
                        company_id: 2, name: "eiei", employee: [
                            { emp_id: 1, name: "fluke", password: "1234" },
                            { emp_id: 2, name: "bb", password: "1234" },
                            { emp_id: 3, name: "fern", password: "1234" },
                            { emp_id: 4, name: "zee", password: "1234" },
                        ]
                    },
                ]
            },
        ];
    }
    UserService.prototype.getUsers = function () {
        return this.User;
    };
    UserService.prototype.getUser = function (id) {
        return this.User.filter(function (user) { return user.id === id; })[0];
    };
    return UserService;
}());
UserService = __decorate([
    core_1.Injectable()
], UserService);
exports.UserService = UserService;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsidXNlci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsc0NBQTJDO0FBRzNDLElBQWEsV0FBVztJQUR4QjtRQUVZLFNBQUksR0FBRztZQUNYO2dCQUNJLEVBQUUsRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUU7b0JBQ3hCO3dCQUNJLFVBQVUsRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUU7NEJBQ3BDLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUU7NEJBQzlDLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUU7NEJBQzNDLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUU7NEJBQzdDLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUU7eUJBQy9DO3FCQUNKO29CQUNEO3dCQUNJLFVBQVUsRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUU7NEJBQ25DLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUU7NEJBQzlDLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUU7NEJBQzNDLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUU7NEJBQzdDLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUU7eUJBQy9DO3FCQUNKO2lCQUNKO2FBQ0o7U0FDSixDQUFDO0lBU04sQ0FBQztJQVBHLDhCQUFRLEdBQVI7UUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztJQUNyQixDQUFDO0lBRUQsNkJBQU8sR0FBUCxVQUFRLEVBQVU7UUFDZCxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsVUFBQSxJQUFJLElBQUksT0FBQSxJQUFJLENBQUMsRUFBRSxLQUFLLEVBQUUsRUFBZCxDQUFjLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN2RCxDQUFDO0lBQ0wsa0JBQUM7QUFBRCxDQUFDLEFBL0JELElBK0JDO0FBL0JZLFdBQVc7SUFEdkIsaUJBQVUsRUFBRTtHQUNBLFdBQVcsQ0ErQnZCO0FBL0JZLGtDQUFXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBVc2VyU2VydmljZSB7XHJcbiAgICBwcml2YXRlIFVzZXIgPSBbXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBpZDogMSwgbmFtZTogXCJvbi5sa1wiLCB1c2VyOiBbXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29tcGFueV9pZDogMSwgbmFtZTogXCJmbHVrZVwiLCBlbXBsb3llZTogW1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB7IGVtcF9pZDogMSwgbmFtZTogXCJmbHVrZVwiLCBwYXNzd29yZDogXCIxMjM0XCIgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgeyBlbXBfaWQ6IDIsIG5hbWU6IFwiYmJcIiwgcGFzc3dvcmQ6IFwiMTIzNFwiIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgZW1wX2lkOiAzLCBuYW1lOiBcImZlcm5cIiwgcGFzc3dvcmQ6IFwiMTIzNFwiIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgZW1wX2lkOiA0LCBuYW1lOiBcInplZVwiLCBwYXNzd29yZDogXCIxMjM0XCIgfSxcclxuICAgICAgICAgICAgICAgICAgICBdXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbXBhbnlfaWQ6IDIsIG5hbWU6IFwiZWllaVwiLCBlbXBsb3llZTogW1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB7IGVtcF9pZDogMSwgbmFtZTogXCJmbHVrZVwiLCBwYXNzd29yZDogXCIxMjM0XCIgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgeyBlbXBfaWQ6IDIsIG5hbWU6IFwiYmJcIiwgcGFzc3dvcmQ6IFwiMTIzNFwiIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgZW1wX2lkOiAzLCBuYW1lOiBcImZlcm5cIiwgcGFzc3dvcmQ6IFwiMTIzNFwiIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHsgZW1wX2lkOiA0LCBuYW1lOiBcInplZVwiLCBwYXNzd29yZDogXCIxMjM0XCIgfSxcclxuICAgICAgICAgICAgICAgICAgICBdXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBdXHJcbiAgICAgICAgfSxcclxuICAgIF07XHJcblxyXG4gICAgZ2V0VXNlcnMoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuVXNlcjtcclxuICAgIH1cclxuXHJcbiAgICBnZXRVc2VyKGlkOiBudW1iZXIpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5Vc2VyLmZpbHRlcih1c2VyID0+IHVzZXIuaWQgPT09IGlkKVswXTtcclxuICAgIH1cclxufVxyXG4iXX0=